import streamlit as st
import pandas as pd
from datetime import datetime
import gspread
from oauth2client.service_account import ServiceAccountCredentials

# ======== CONFIGURA√á√ÉO STREAMLIT ========
st.set_page_config(page_title="Registro Transfer√™ncia", layout="centered")
st.title("üöö Registro de Transfer√™ncia de Carga")

# ======== CONEX√ÉO COM GOOGLE SHEETS ========
def conectar_google_sheets():
    scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
    creds = ServiceAccountCredentials.from_json_keyfile_name("credenciais.json", scope)
    client = gspread.authorize(creds)
    planilha = client.open("Controle Transferencia")
    aba = planilha.sheet1  # ou planilha.worksheet("P√°gina1") se a aba tiver outro nome
    return aba

# ======== CAMPOS ========
campos_tempo = [
    "Entrada na F√°brica", "Encostou na doca F√°brica", "In√≠cio carregamento", "Fim carregamento",
    "Faturado", "Amarra√ß√£o carga", "Sa√≠da do p√°tio", "Entrada CD", "Encostou na doca CD",
    "In√≠cio Descarregamento CD", "Fim Descarregamento CD", "Sa√≠da CD"
]

# ======== INICIALIZAR CAMPOS DE SESS√ÉO ========
for campo in campos_tempo:
    if campo not in st.session_state:
        st.session_state[campo] = ""

# ======== CAMPOS MANUAIS ========
st.subheader("Dados do Ve√≠culo")
data = st.date_input("Data", value=datetime.today())
placa = st.text_input("Placa do caminh√£o")
conferente = st.text_input("Nome do conferente")

# ======== BOT√ïES DE REGISTRO DE TEMPO ========
def registrar_tempo(label):
    if st.button(f"Registrar {label}"):
        st.session_state[label] = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

st.subheader("F√°brica")
for campo in campos_tempo[:7]:
    registrar_tempo(campo)
    st.text_input(campo, value=st.session_state[campo], disabled=True)

st.subheader("Centro de Distribui√ß√£o (CD)")
for campo in campos_tempo[7:]:
    registrar_tempo(campo)
    st.text_input(campo, value=st.session_state[campo], disabled=True)

# ======== C√ÅLCULO DE TEMPOS ========
def calc_tempo(fim, inicio):
    try:
        t1 = datetime.strptime(st.session_state[fim], "%Y-%m-%d %H:%M:%S")
        t0 = datetime.strptime(st.session_state[inicio], "%Y-%m-%d %H:%M:%S")
        return str(t1 - t0)
    except:
        return ""

tempo_carreg = calc_tempo("Fim carregamento", "In√≠cio carregamento")
tempo_espera = calc_tempo("Encostou na doca F√°brica", "Entrada na F√°brica")
tempo_total = calc_tempo("Sa√≠da do p√°tio", "Entrada na F√°brica")
tempo_descarga = calc_tempo("Fim Descarregamento CD", "In√≠cio Descarregamento CD")
tempo_espera_cd = calc_tempo("Encostou na doca CD", "Entrada CD")
tempo_total_cd = calc_tempo("Sa√≠da CD", "Entrada CD")
tempo_percurso = calc_tempo("Entrada CD", "Sa√≠da do p√°tio")

# ======== BOT√ÉO DE SALVAR ========
if st.button("‚úÖ Salvar Registro"):
    nova_linha = [
        str(data),
        placa,
        conferente,
        *[st.session_state[campo] for campo in campos_tempo],
        tempo_carreg,
        tempo_espera,
        tempo_total,
        tempo_descarga,
        tempo_espera_cd,
        tempo_total_cd,
        tempo_percurso,
    ]

    try:
        aba = conectar_google_sheets()
        aba.append_row(nova_linha)
        st.success("Registro salvo com sucesso!")

        # Resetar campos
        for campo in campos_tempo:
            st.session_state[campo] = ""
    except Exception as e:
        st.error(f"Erro ao salvar na planilha: {e}")